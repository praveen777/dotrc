snippet http "web functions with curl and wget"
initDownloadTool() {
	if type "curl" > /dev/null; then
		DOWNLOAD_TOOL="curl"
	elif type "wget" > /dev/null; then
		DOWNLOAD_TOOL="wget"
	else
		die "You need curl or wget as download tool. Please install it first before continue"
	fi
	echo "Using $DOWNLOAD_TOOL as download tool"
}

get() {
	local url="$2"
	local body
	local httpStatusCode
	echo "Getting $url"
	if [ "$DOWNLOAD_TOOL" = "curl" ]; then
		httpResponse=$(curl -sL --write-out HTTPSTATUS:%{http_code} "$url")
		httpStatusCode=$(echo $httpResponse | tr -d '\n' | sed -e 's/.*HTTPSTATUS://')
		body=$(echo "$httpResponse" | sed -e 's/HTTPSTATUS\:.*//g')
	elif [ "$DOWNLOAD_TOOL" = "wget" ]; then
		tmpFile=$(mktemp)
		body=$(wget --server-response --content-on-error -q -O - "$url" 2> $tmpFile || true)
		httpStatusCode=$(cat $tmpFile | awk '/^  HTTP/{print $2}')
	fi
	if [ "$httpStatusCode" != 200 ]; then
		echo "Request die with http status code $httpStatusCode"
		die "Body: $body"
	fi
	eval "\$1='$body'"
}

getFile() {
	local url="\$1"
	local filePath="\$2"
	if [ "$DOWNLOAD_TOOL" = "curl" ]; then
		httpStatusCode=$(curl -s -w '%{http_code}' -L "$url" -o "$filePath")
	elif [ "$DOWNLOAD_TOOL" = "wget" ]; then
		body=$(wget --server-response --content-on-error -q -O "$filePath" "$url")
		httpStatusCode=$(cat $tmpFile | awk '/^  HTTP/{print $2}')
	fi
	echo "$httpStatusCode"
}

endsnippet

snippet now "assigns current time to variable"
NOW=$(date +"%m-%d-%Y %H:%M:%S")
endsnippet

snippet main "main ... (exit)"
#!/bin/bash
set -eu
set -o pipefail

cleanup() {
  log "Exiting"
}

trap cleanup SIGINT EXIT SIGHUP

update_time() {
  NOW=$(date +"%m-%d-%Y %H:%M:%S")
}

die() {
  update_time
  echo  "${NOW}":$'\e[31mDIED\e[0m'": $@"  >&2
  exit 1
}

log() {
  update_time
  echo "${NOW}:INFO: $@"
}

usage() {
  echo
}

main() {
  while getopts ":h" opt; do
    case ${opt} in
      h )
        usage
       ;;
      \? )
        echo "Invalid Option: -$OPTARG" 1>&2
        exit 1
        ;;
    esac
  done
  shift $((OPTIND -1))
  log "main script"
  die "boom"
}

main $@

endsnippet


